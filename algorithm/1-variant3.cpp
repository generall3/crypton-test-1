/*
 * Отсортировать массив таким образом, чтобы сначала по возрастанию шли все чётные элементы массива, а затем по убыванию нечётные элементы
*/
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <time.h>
using namespace std;

int main()
{
    srand(time(NULL)); // устанавливает в качестве базы псевдослучайных чисел текущее время, чтобы при каждом запуске создавать разные значения
    int size = 20; // размер массива
    int odd = size - 1;
    int *p; // указатель для выделения памяти под массив
    p = new int[size]; // выделение памяти под массив

    // заполнение массива
    cout << "Изначальный массив: ";
    for (int i = 0; i < size; i++)
    {
        p[i] = rand() % 101; // заполнение массива псевдослучайными числами в диапазоне от 0 до 100
        cout << p[i] << " ";
    }

    int temp; // временная переменная для обмена элементов

    // сортировка массива
    for(int i = 0, j = 0; i <= odd; ++i)
    {
        temp = p[i];
        if(temp % 2 == 0) // проверка числа на чётность
        {
            for(j = i - 1; j >= 0 && p[j] > temp; --j)
            {
                p[j+1] = p[j];
            }
            p[j+1] = temp;
        }
        else
        {
            swap(p[i], p[odd]); // меняю элементы местами
            for(j = odd + 1; j < size && p[j] > temp; ++j)
            {
                p[j-1] = p[j];
            }
            p[j-1] = temp;
            --odd;
            --i;
        }
    }

    cout << endl << endl;

    // вывод отсортированного массива
    cout << "Конечный массив: ";
    for(int val = 0; val < size; val++)
    {
        cout << p[val] << " ";
    }

    cout << endl;

    delete [] p; // обнуление массива

    return 0;
}
